{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dracumel\\\\Desktop\\\\group project\\\\groupREVISED\\\\frontend\\\\src\\\\screens\\\\PaymentScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Form, Button, Col, Row } from 'react-bootstrap';\nimport { useHistory } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction PaymentScreen() {\n  _s();\n\n  const history = useHistory();\n  const loggedUser = localStorage.getItem('user');\n  const [paymentMethod, setPaymentMethod] = useState('');\n\n  const submitHandler = e => {\n    e.preventDefault();\n    localStorage.setItem(\"paymentMethod\", JSON.stringify(paymentMethod));\n    history.push('/placeorder');\n  };\n\n  if (loggedUser) {\n    return /*#__PURE__*/_jsxDEV(Row, {\n      className: \"justify-content-md-center\",\n      style: {\n        paddingTop: \"5rem\",\n        paddingBottom: \"5rem\",\n        paddingLeft: \"0rem\",\n        paddingRight: \"0rem\",\n        textAlign: \"center\",\n        fontSize: \"20px\",\n        backgroundColor: \"rgba(0, 0, 0, 0.28)\",\n        minHeight: \"413px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        xs: 12,\n        md: 6,\n        style: {\n          width: \"35%\",\n          paddingTop: \"0%\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: submitHandler,\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            style: {\n              padding: \"3%\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              style: {\n                paddingTop: \"1%\"\n              },\n              as: \"legend\",\n              children: \"Select Method\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              children: /*#__PURE__*/_jsxDEV(Form.Check, {\n                style: {\n                  padding: \"2%\"\n                },\n                type: \"radio\",\n                label: \"PayPal or Credit Card\",\n                id: \"paypal\",\n                value: \"paypal\",\n                name: \"paymentMethod\",\n                onClick: e => setPaymentMethod(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 39,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 25\n          }, this), paymentMethod.length > 0 ? /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            variant: \"primary\",\n            children: \"Continue\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 29\n          }, this) : /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            variant: \"primary\",\n            disabled: true,\n            children: \"Continue\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this);\n  }\n}\n\n_s(PaymentScreen, \"QUQjSLQoW2X4q0/pmPEnseC/QIs=\", false, function () {\n  return [useHistory];\n});\n\n_c = PaymentScreen;\nexport default PaymentScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"PaymentScreen\");","map":{"version":3,"sources":["C:/Users/Dracumel/Desktop/group project/groupREVISED/frontend/src/screens/PaymentScreen.js"],"names":["React","useState","Form","Button","Col","Row","useHistory","PaymentScreen","history","loggedUser","localStorage","getItem","paymentMethod","setPaymentMethod","submitHandler","e","preventDefault","setItem","JSON","stringify","push","paddingTop","paddingBottom","paddingLeft","paddingRight","textAlign","fontSize","backgroundColor","minHeight","width","padding","target","value","length"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\r\nimport { Form, Button, Col , Row } from 'react-bootstrap'\r\nimport { useHistory } from 'react-router-dom';\r\n\r\n\r\nfunction PaymentScreen() {\r\n\r\n    const history = useHistory();\r\n    const loggedUser = localStorage.getItem('user')\r\n\r\n    const [paymentMethod, setPaymentMethod] = useState('')\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        localStorage.setItem(\"paymentMethod\", JSON.stringify(paymentMethod));\r\n        history.push('/placeorder')\r\n    }\r\n\r\n    if (loggedUser) {\r\n\r\n        return (\r\n            <Row className=\"justify-content-md-center\" style={{\r\n                paddingTop: \"5rem\",\r\n                paddingBottom: \"5rem\",\r\n                paddingLeft: \"0rem\",\r\n                paddingRight: \"0rem\",\r\n                textAlign: \"center\",\r\n                fontSize:\"20px\",\r\n                backgroundColor: \"rgba(0, 0, 0, 0.28)\",\r\n                minHeight:\"413px\"\r\n            }}>\r\n\r\n                <Col  xs={12} md={6} style={{ width: \"35%\", paddingTop: \"0%\", }}>\r\n\r\n                    <Form onSubmit={submitHandler}  >\r\n                        <Form.Group style={{ padding: \"3%\", }}>\r\n                            <Form.Label style={{ paddingTop: \"1%\", }} as='legend'>Select Method</Form.Label>\r\n                            <Col>\r\n                                <Form.Check style={{ padding: \"2%\", }}\r\n                                    type='radio'\r\n                                    label='PayPal or Credit Card'\r\n                                    id='paypal'\r\n                                    value='paypal'\r\n                                    name='paymentMethod'\r\n\r\n                                    onClick={(e) => setPaymentMethod(e.target.value)}\r\n                                >\r\n\r\n                                </Form.Check>\r\n                            </Col>\r\n                        </Form.Group>\r\n                        {paymentMethod.length > 0 ?\r\n                            <Button type='submit' variant='primary'  >\r\n                                Continue\r\n                            </Button>\r\n                            :\r\n                            <Button type='submit' variant='primary' disabled>\r\n                                Continue\r\n                            </Button>\r\n                        }\r\n\r\n                    </Form>\r\n                </Col>\r\n            </Row>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default PaymentScreen"]},"metadata":{},"sourceType":"module"}